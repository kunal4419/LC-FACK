// Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
// An input string is valid if:
// 1.Open brackets must be closed by the same type of brackets.
// 2.Open brackets must be closed in the correct order.
// 3.Every close bracket has a corresponding open bracket of the same type.
 

// Example 1:

// Input : s = "()"

// Output : true


class Solution {
    public boolean isValid(String s) {
        Stack<Character> st = new Stack<>();
        for(int i=0; i<s.length(); i++){
            if(st.size()==0 || s.charAt(i)=='(' || s.charAt(i)=='{' || s.charAt(i)=='['){
                st.push(s.charAt(i));
            }
            else{
                if(s.charAt(i)==')'){
                    if(st.peek()=='(') st.pop();
                    else return false;
                }
                else if(s.charAt(i)=='}'){
                    if(st.peek()=='{') st.pop();
                    else return false;
                }
                else{
                    if(st.peek()=='[') st.pop();
                    else return false;
                }
            }
        }
        return st.size()==0;
    }
}
